# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "integration" ]
  pull_request:
    branches: [ "main", "integration" ]

jobs:
  buildFrontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'mern/client'
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Frontend Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
    - name: Lint Action
      uses: wearerequired/lint-action@v2.1.0
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - run: |
        export REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}
        echo The secret is:$REACT_APP_BACKEND_URL
        npm test
  

  buildBackend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'mern/server'
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Frontend Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
    - name: MongoDB in GitHub Actions
      uses: supercharge/mongodb-github-action@1.8.0

      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - run: |
        export ATLAS_URI=${{ secrets.BACKEND_ENV }}
        echo The secret is:$ATLAS_URI
        npm test
  
